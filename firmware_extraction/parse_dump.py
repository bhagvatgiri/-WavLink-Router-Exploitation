from multiprocessing.dummy import Pool
import binascii
import hashlib

BASE_OFFSET = 0xbc050000
DUMP_LENGTH = 0x1545b8 * 4

data = bytearray(DUMP_LENGTH)

def process_line(line):
    if(line.startswith("bc")):
        groups = line.split(" ")
        offset = int(groups[0].rstrip(":"), 16) - BASE_OFFSET
        line_bytes = b''
        for x in groups[1:5]:
            assert len(x) == 8
            b = binascii.unhexlify(x)
            #data was printed as little endian 32-bit numbers, so we need to reverse the byte order
            line_bytes += b[::-1]
        data[offset:offset + 16] = line_bytes

with open("putty.log","r") as fin:
    with Pool(12) as p:
        p.map(process_line, fin.readlines())
        
with open("firmware.bin","wb") as fout:
    #we read 8 extra bytes
    fout.write(data[:-8])
